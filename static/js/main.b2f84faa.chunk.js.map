{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","name","alt","email","CardList","monsters","map","id","SearchBox","onSearchChange","placeholder","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","length","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,kDAA6CF,EAAQG,KAArD,QACHC,IAAI,YAEN,6BAAKJ,EAAQG,OACb,4BAAIH,EAAQK,W,MCPH,SAASC,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SACjC,OACE,qBAAKN,UAAU,YAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQS,S,MCLZ,SAASC,EAAT,GAAqD,IAAhCC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,YAClD,OACE,uBACEX,UAAU,aACVY,KAAK,SACLD,YAAaA,EACbE,SAAUH,I,ICwCDI,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAcFJ,eAAiB,SAAAK,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,+CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAMhC,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAElB,OACE,sBAAKjB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,cAAC,EAAD,CACEU,eAAgBgB,KAAKhB,eACrBC,YAAY,mBAEbL,EAASqB,OAAS,EACjB,cAAC,EAAD,CACErB,SAAUA,EAASsB,QAAO,SAAA7B,GAAO,OAC/BA,EAAQG,KAAK2B,cAAcC,SAASb,EAAYY,oBAIpD,oBAAI7B,UAAU,UAAd,+B,GApCQ+B,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b2f84faa.chunk.js","sourcesContent":["import './Card.css'\n\nexport default function Card({ monster }) {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://avatars.dicebear.com/api/bottts/${monster.name}.svg`}\n        alt=\"monster\"\n      />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  )\n}\n","import Card from '../Card/Card'\nimport './CardList.css'\n\nexport default function CardList({ monsters }) {\n  return (\n    <div className=\"card-list\">\n      {monsters.map(monster => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  )\n}\n","import './SearchBox.css'\n\nexport default function SearchBox({ onSearchChange, placeholder }) {\n  return (\n    <input\n      className=\"search-box\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={onSearchChange}\n    ></input>\n  )\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport CardList from './components/CardList/CardList'\nimport SearchBox from './components/SearchBox/SearchBox'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users/')\n      .then(response => response.json())\n      .then(users => {\n        this.setState({ monsters: users })\n      })\n  }\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value })\n  }\n  render() {\n    const { monsters, searchField } = this.state\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Monsters Rolodex</h1>\n        <SearchBox\n          onSearchChange={this.onSearchChange}\n          placeholder=\"Search monster\"\n        />\n        {monsters.length > 0 ? (\n          <CardList\n            monsters={monsters.filter(monster =>\n              monster.name.toLowerCase().includes(searchField.toLowerCase())\n            )}\n          />\n        ) : (\n          <h2 className=\"loading\">Loading...</h2>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}